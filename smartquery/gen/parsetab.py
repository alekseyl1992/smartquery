
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNleftSHORT_OPleftORleftANDnonassocEQNEGTLTGTELTEINleftPLUSMINUSleftTIMESDIVIDErightPOWERleftPIPEleftDOTrightNOTrightUMINUSleftLBRACKETAND ASSIGN BREAK COLON COMMA COMMENT CONTINUE DEF DEL DIVIDE DOT ELIF ELSE EQ FALSE FOR GT GTE IF IN LAMBDA LBRACE LBRACKET LPAREN LT LTE MINUS NAME NE NEWLINE NONE NOT NUMBER OR PIPE PLUS POWER RAISE RBRACE RBRACKET RPAREN SHORT_OP STRING TIMES TRUE WHILE code : line\n             | code NEWLINE line line : statement  statement : expression statement :  statement : COMMENT  expression : FOR\n                   | WHILE\n                   | ELIF\n                   | BREAK\n                   | CONTINUE\n                   | DEF\n                   | RAISE expression : NUMBER  expression : STRING  statement : NAME ASSIGN expression  statement : NAME SHORT_OP expression  expression : NAME LPAREN arglist RPAREN\n                   | NAME LPAREN RPAREN\n     expression : expression DOT NAME LPAREN arglist RPAREN\n                   | expression PIPE NAME LPAREN arglist RPAREN\n                   | expression DOT NAME LPAREN RPAREN\n                   | expression PIPE NAME\n     expression : NAME LAMBDA expression\n                   | LPAREN arglist_def RPAREN LAMBDA expression\n     dict_item : dict_item COMMA dict_item\n                  | expression COLON expression\n     expression : expression PLUS expression\n                   | expression MINUS expression\n                   | expression TIMES expression\n                   | expression POWER expression\n                   | expression DIVIDE expression\n                   | expression EQ expression\n                   | expression NE expression\n                   | expression GT expression\n                   | expression LT expression\n                   | expression GTE expression\n                   | expression LTE expression\n                   | expression NOT IN expression\n                   | expression IN expression\n                   | expression AND expression\n                   | expression OR expression\n     expression : LBRACKET RBRACKET\n                   | LBRACKET arglist RBRACKET\n     expression : LBRACE RBRACE\n                   | LBRACE dict_item RBRACE\n     slice : expression\n              | COLON\n              | expression COLON expression\n              | expression COLON\n              | COLON expression\n              | expression COLON COLON\n              | COLON expression COLON\n              | COLON COLON expression\n     expression : expression LBRACKET slice RBRACKET\n                   | expression LBRACKET expression RBRACKET\n     statement : DEL expression LBRACKET expression RBRACKET\n     statement : expression LBRACKET expression RBRACKET ASSIGN expression\n     statement : expression LBRACKET expression RBRACKET SHORT_OP expression\n     expression : expression IF expression ELSE expression\n     expression : MINUS expression %prec UMINUS  expression : LPAREN expression RPAREN expression : TRUE  expression : FALSE  expression : NONE  expression : NOT expression  expression : NAME  arglist : arglist COMMA expression\n                | expression\n     arglist_def : arglist COMMA NAME\n                    | NAME\n    '
    
_lr_action_items = {'NEWLINE':([0,1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,22,23,24,25,50,51,58,59,60,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,88,89,91,95,97,100,102,107,109,124,126,127,128,129,130,131,132,133,],[-5,25,-1,-3,-4,-6,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,-5,-67,-43,-61,-66,-45,-2,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,-16,-17,-19,-24,-44,-62,-46,-56,-55,-39,-18,-22,-60,-57,-56,-25,-58,-59,-20,-21,]),'$end':([0,1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,22,23,24,25,50,51,58,59,60,63,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,88,89,91,95,97,100,102,107,109,124,126,127,128,129,130,131,132,133,],[-5,0,-1,-3,-4,-6,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,-5,-67,-43,-61,-66,-45,-2,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,-16,-17,-19,-24,-44,-62,-46,-56,-55,-39,-18,-22,-60,-57,-56,-25,-58,-59,-20,-21,]),'COMMENT':([0,25,],[5,5,]),'NAME':([0,7,8,18,19,20,21,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[6,50,50,57,50,50,50,6,50,67,68,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,114,50,50,50,50,50,50,50,50,50,50,]),'DEL':([0,25,],[7,7,]),'FOR':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'WHILE':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ELIF':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'BREAK':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'CONTINUE':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'DEF':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RAISE':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NUMBER':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'STRING':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LPAREN':([0,6,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,50,57,66,67,68,80,90,92,93,96,98,99,101,103,105,106,108,113,114,117,118,],[18,47,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,47,47,18,105,106,18,18,18,18,18,18,18,18,18,18,18,18,18,47,18,18,]),'LBRACKET':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,53,55,57,58,59,60,62,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,124,126,127,128,129,130,131,132,133,],[8,26,-67,8,8,-7,-8,-9,-10,-11,-12,-13,-14,-15,8,8,8,8,-63,-64,-65,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,90,-67,-43,93,93,-67,93,93,-45,93,93,8,-23,93,93,93,93,93,93,93,93,93,93,93,8,93,93,93,93,93,93,-19,93,8,-44,8,8,-62,8,-46,8,8,-56,8,-55,8,93,8,8,93,8,-18,93,93,93,8,-67,93,8,8,93,93,-22,93,-56,-56,93,93,93,-20,-21,]),'LBRACE':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'MINUS':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,53,55,57,58,59,60,62,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,124,126,127,128,129,130,131,132,133,],[19,30,-67,19,19,-7,-8,-9,-10,-11,-12,-13,-14,-15,19,19,19,19,-63,-64,-65,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,30,-67,-43,30,30,-67,-61,-66,-45,30,30,19,-23,-28,-29,-30,-31,-32,30,30,30,30,30,30,19,30,30,30,30,30,30,-19,30,19,-44,19,19,-62,19,-46,19,19,-56,19,-55,19,30,19,19,30,19,-18,30,30,30,19,-67,30,19,19,30,30,-22,30,-56,-56,30,30,30,-20,-21,]),'TRUE':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'FALSE':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'NONE':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NOT':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,53,55,57,58,59,60,62,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,121,124,126,127,128,129,130,131,132,133,],[20,40,-67,20,20,-7,-8,-9,-10,-11,-12,-13,-14,-15,20,20,20,20,-63,-64,-65,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,40,-67,-43,40,40,-67,-61,40,-45,40,40,20,-23,40,40,40,40,40,40,40,40,40,40,40,20,40,40,40,40,40,40,-19,40,20,-44,20,20,-62,20,-46,20,20,-56,20,-55,20,40,20,20,40,20,-18,40,40,40,20,-67,40,20,20,40,40,-22,40,-56,-56,40,40,40,-20,-21,]),'DOT':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[27,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,27,-67,-43,27,27,-67,-61,-66,-45,27,27,-23,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-19,27,-44,-62,-46,-56,-55,27,27,-18,27,27,27,-67,27,27,27,-22,27,-56,-56,27,27,27,-20,-21,]),'PIPE':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[28,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,28,-67,-43,28,28,-67,-61,-66,-45,28,28,-23,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-19,28,-44,-62,-46,-56,-55,28,28,-18,28,28,28,-67,28,28,28,-22,28,-56,-56,28,28,28,-20,-21,]),'PLUS':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[29,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,29,-67,-43,29,29,-67,-61,-66,-45,29,29,-23,-28,-29,-30,-31,-32,29,29,29,29,29,29,29,29,29,29,29,29,-19,29,-44,-62,-46,-56,-55,29,29,-18,29,29,29,-67,29,29,29,-22,29,-56,-56,29,29,29,-20,-21,]),'TIMES':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[31,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,31,-67,-43,31,31,-67,-61,-66,-45,31,31,-23,31,31,-30,-31,-32,31,31,31,31,31,31,31,31,31,31,31,31,-19,31,-44,-62,-46,-56,-55,31,31,-18,31,31,31,-67,31,31,31,-22,31,-56,-56,31,31,31,-20,-21,]),'POWER':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[32,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,32,-67,-43,32,32,-67,-61,-66,-45,32,32,-23,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-19,32,-44,-62,-46,-56,-55,32,32,-18,32,32,32,-67,32,32,32,-22,32,-56,-56,32,32,32,-20,-21,]),'DIVIDE':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[33,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,33,-67,-43,33,33,-67,-61,-66,-45,33,33,-23,33,33,-30,-31,-32,33,33,33,33,33,33,33,33,33,33,33,33,-19,33,-44,-62,-46,-56,-55,33,33,-18,33,33,33,-67,33,33,33,-22,33,-56,-56,33,33,33,-20,-21,]),'EQ':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[34,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,34,-67,-43,34,34,-67,-61,-66,-45,34,34,-23,-28,-29,-30,-31,-32,None,None,None,None,None,None,None,34,34,34,34,34,-19,34,-44,-62,-46,-56,-55,34,None,-18,34,34,34,-67,34,34,34,-22,34,-56,-56,34,34,34,-20,-21,]),'NE':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[35,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,35,-67,-43,35,35,-67,-61,-66,-45,35,35,-23,-28,-29,-30,-31,-32,None,None,None,None,None,None,None,35,35,35,35,35,-19,35,-44,-62,-46,-56,-55,35,None,-18,35,35,35,-67,35,35,35,-22,35,-56,-56,35,35,35,-20,-21,]),'GT':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[36,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,36,-67,-43,36,36,-67,-61,-66,-45,36,36,-23,-28,-29,-30,-31,-32,None,None,None,None,None,None,None,36,36,36,36,36,-19,36,-44,-62,-46,-56,-55,36,None,-18,36,36,36,-67,36,36,36,-22,36,-56,-56,36,36,36,-20,-21,]),'LT':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[37,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,37,-67,-43,37,37,-67,-61,-66,-45,37,37,-23,-28,-29,-30,-31,-32,None,None,None,None,None,None,None,37,37,37,37,37,-19,37,-44,-62,-46,-56,-55,37,None,-18,37,37,37,-67,37,37,37,-22,37,-56,-56,37,37,37,-20,-21,]),'GTE':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[38,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,38,-67,-43,38,38,-67,-61,-66,-45,38,38,-23,-28,-29,-30,-31,-32,None,None,None,None,None,None,None,38,38,38,38,38,-19,38,-44,-62,-46,-56,-55,38,None,-18,38,38,38,-67,38,38,38,-22,38,-56,-56,38,38,38,-20,-21,]),'LTE':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[39,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,39,-67,-43,39,39,-67,-61,-66,-45,39,39,-23,-28,-29,-30,-31,-32,None,None,None,None,None,None,None,39,39,39,39,39,-19,39,-44,-62,-46,-56,-55,39,None,-18,39,39,39,-67,39,39,39,-22,39,-56,-56,39,39,39,-20,-21,]),'IN':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,40,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[41,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,80,41,-67,-43,41,41,-67,-61,-66,-45,41,41,-23,-28,-29,-30,-31,-32,None,None,None,None,None,None,None,41,41,41,41,41,-19,41,-44,-62,-46,-56,-55,41,None,-18,41,41,41,-67,41,41,41,-22,41,-56,-56,41,41,41,-20,-21,]),'AND':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[42,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,42,-67,-43,42,42,-67,-61,-66,-45,42,42,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,42,42,42,42,-19,42,-44,-62,-46,-56,-55,42,-39,-18,42,42,42,-67,42,42,42,-22,42,-56,-56,42,42,42,-20,-21,]),'OR':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[43,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,43,-67,-43,43,43,-67,-61,-66,-45,43,43,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,43,43,43,-19,43,-44,-62,-46,-56,-55,43,-39,-18,43,43,43,-67,43,43,43,-22,43,-56,-56,43,43,43,-20,-21,]),'IF':([4,6,9,10,11,12,13,14,15,16,17,22,23,24,49,50,51,53,55,57,58,59,60,62,64,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,88,89,91,95,97,100,102,104,107,109,110,111,112,114,116,119,121,124,126,127,128,129,130,131,132,133,],[44,-67,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,44,-67,-43,44,44,-67,-61,-66,-45,44,44,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,44,44,44,-19,44,-44,-62,-46,-56,-55,44,-39,-18,44,44,44,-67,44,44,44,-22,44,-56,-56,44,44,44,-20,-21,]),'ASSIGN':([6,100,],[45,117,]),'SHORT_OP':([6,100,],[46,118,]),'LAMBDA':([6,50,57,94,114,],[48,48,48,113,48,]),'RBRACKET':([8,9,10,11,12,13,14,15,16,17,22,23,24,50,51,52,53,58,59,60,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,88,89,91,95,97,101,102,104,107,109,110,111,112,119,120,121,122,124,126,128,129,132,133,],[51,-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,-67,-43,91,-69,-61,-66,-45,100,102,-48,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,-19,-24,-44,-62,-46,-50,-55,-51,-39,-18,127,-68,128,-49,-52,-54,-53,-22,-60,-56,-25,-20,-21,]),'COMMA':([9,10,11,12,13,14,15,16,17,22,23,24,50,51,52,53,55,56,57,58,59,60,61,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,87,88,89,91,95,97,102,107,109,111,114,115,116,123,124,125,126,128,129,132,133,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,-67,-43,92,-69,-69,96,-67,-61,-66,-45,98,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,92,-19,-24,-44,-62,-46,-55,-39,-18,-68,-67,98,-27,92,-22,92,-60,-56,-25,-20,-21,]),'RPAREN':([9,10,11,12,13,14,15,16,17,22,23,24,47,50,51,53,54,55,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,87,88,89,91,95,97,102,105,107,109,111,114,123,124,125,126,128,129,132,133,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,88,-67,-43,-69,94,95,-67,-61,-66,-45,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,109,-19,-24,-44,-62,-46,-55,124,-39,-18,-68,-70,132,-22,133,-60,-56,-25,-20,-21,]),'COLON':([9,10,11,12,13,14,15,16,17,22,23,24,26,50,51,58,59,60,62,64,66,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,88,89,90,91,93,95,97,101,102,104,107,109,110,112,124,126,128,129,132,133,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,66,-67,-43,-61,-66,-45,99,101,103,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,-19,-24,66,-44,66,-62,-46,120,-55,122,-39,-18,101,101,-22,-60,-56,-25,-20,-21,]),'ELSE':([9,10,11,12,13,14,15,16,17,22,23,24,50,51,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,88,89,91,95,97,102,107,109,124,126,128,129,132,133,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,-63,-64,-65,-67,-43,-61,-66,-45,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,108,-19,-24,-44,-62,-46,-55,-39,-18,-22,-60,-56,-25,-20,-21,]),'RBRACE':([9,10,11,12,13,14,15,16,17,21,22,23,24,50,51,58,59,60,61,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,88,89,91,95,97,102,107,109,115,116,124,126,128,129,132,133,],[-7,-8,-9,-10,-11,-12,-13,-14,-15,60,-63,-64,-65,-67,-43,-61,-66,-45,97,-23,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-40,-41,-42,-19,-24,-44,-62,-46,-55,-39,-18,-26,-27,-22,-60,-56,-25,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,],[1,]),'line':([0,25,],[2,63,]),'statement':([0,25,],[3,3,]),'expression':([0,7,8,18,19,20,21,25,26,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,66,80,90,92,93,96,98,99,101,103,105,106,108,113,117,118,],[4,49,53,55,58,59,62,4,64,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,53,89,104,107,110,111,112,111,62,116,119,121,53,53,126,129,130,131,]),'arglist':([8,18,47,105,106,],[52,56,87,123,125,]),'arglist_def':([18,],[54,]),'dict_item':([21,98,],[61,115,]),'slice':([26,90,93,],[65,65,65,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> line','code',1,'p_code','rules.py',12),
  ('code -> code NEWLINE line','code',3,'p_code','rules.py',13),
  ('line -> statement','line',1,'p_line','rules.py',27),
  ('statement -> expression','statement',1,'p_statement_expr','rules.py',32),
  ('statement -> <empty>','statement',0,'p_statement_empty','rules.py',37),
  ('statement -> COMMENT','statement',1,'p_statement_comment','rules.py',42),
  ('expression -> FOR','expression',1,'p_expression_reserved_unused','rules.py',47),
  ('expression -> WHILE','expression',1,'p_expression_reserved_unused','rules.py',48),
  ('expression -> ELIF','expression',1,'p_expression_reserved_unused','rules.py',49),
  ('expression -> BREAK','expression',1,'p_expression_reserved_unused','rules.py',50),
  ('expression -> CONTINUE','expression',1,'p_expression_reserved_unused','rules.py',51),
  ('expression -> DEF','expression',1,'p_expression_reserved_unused','rules.py',52),
  ('expression -> RAISE','expression',1,'p_expression_reserved_unused','rules.py',53),
  ('expression -> NUMBER','expression',1,'p_expression_number','rules.py',58),
  ('expression -> STRING','expression',1,'p_expression_string','rules.py',63),
  ('statement -> NAME ASSIGN expression','statement',3,'p_statement_assign','rules.py',68),
  ('statement -> NAME SHORT_OP expression','statement',3,'p_statement_short_op','rules.py',73),
  ('expression -> NAME LPAREN arglist RPAREN','expression',4,'p_expression_call','rules.py',78),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_expression_call','rules.py',79),
  ('expression -> expression DOT NAME LPAREN arglist RPAREN','expression',6,'p_expression_method_call','rules.py',88),
  ('expression -> expression PIPE NAME LPAREN arglist RPAREN','expression',6,'p_expression_method_call','rules.py',89),
  ('expression -> expression DOT NAME LPAREN RPAREN','expression',5,'p_expression_method_call','rules.py',90),
  ('expression -> expression PIPE NAME','expression',3,'p_expression_method_call','rules.py',91),
  ('expression -> NAME LAMBDA expression','expression',3,'p_expression_lambda','rules.py',100),
  ('expression -> LPAREN arglist_def RPAREN LAMBDA expression','expression',5,'p_expression_lambda','rules.py',101),
  ('dict_item -> dict_item COMMA dict_item','dict_item',3,'p_dict_item','rules.py',110),
  ('dict_item -> expression COLON expression','dict_item',3,'p_dict_item','rules.py',111),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','rules.py',120),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','rules.py',121),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','rules.py',122),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','rules.py',123),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','rules.py',124),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','rules.py',125),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','rules.py',126),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','rules.py',127),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','rules.py',128),
  ('expression -> expression GTE expression','expression',3,'p_expression_binop','rules.py',129),
  ('expression -> expression LTE expression','expression',3,'p_expression_binop','rules.py',130),
  ('expression -> expression NOT IN expression','expression',4,'p_expression_binop','rules.py',131),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','rules.py',132),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','rules.py',133),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','rules.py',134),
  ('expression -> LBRACKET RBRACKET','expression',2,'p_list_literal','rules.py',143),
  ('expression -> LBRACKET arglist RBRACKET','expression',3,'p_list_literal','rules.py',144),
  ('expression -> LBRACE RBRACE','expression',2,'p_dict_literal','rules.py',153),
  ('expression -> LBRACE dict_item RBRACE','expression',3,'p_dict_literal','rules.py',154),
  ('slice -> expression','slice',1,'p_slice','rules.py',163),
  ('slice -> COLON','slice',1,'p_slice','rules.py',164),
  ('slice -> expression COLON expression','slice',3,'p_slice','rules.py',165),
  ('slice -> expression COLON','slice',2,'p_slice','rules.py',166),
  ('slice -> COLON expression','slice',2,'p_slice','rules.py',167),
  ('slice -> expression COLON COLON','slice',3,'p_slice','rules.py',168),
  ('slice -> COLON expression COLON','slice',3,'p_slice','rules.py',169),
  ('slice -> COLON COLON expression','slice',3,'p_slice','rules.py',170),
  ('expression -> expression LBRACKET slice RBRACKET','expression',4,'p_getitem','rules.py',176),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_getitem','rules.py',177),
  ('statement -> DEL expression LBRACKET expression RBRACKET','statement',5,'p_delitem','rules.py',201),
  ('statement -> expression LBRACKET expression RBRACKET ASSIGN expression','statement',6,'p_setitem','rules.py',207),
  ('statement -> expression LBRACKET expression RBRACKET SHORT_OP expression','statement',6,'p_setitem_with_op','rules.py',213),
  ('expression -> expression IF expression ELSE expression','expression',5,'p_if_expr','rules.py',219),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','rules.py',225),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','rules.py',230),
  ('expression -> TRUE','expression',1,'p_expression_true','rules.py',235),
  ('expression -> FALSE','expression',1,'p_expression_false','rules.py',240),
  ('expression -> NONE','expression',1,'p_expression_none','rules.py',245),
  ('expression -> NOT expression','expression',2,'p_expression_not','rules.py',250),
  ('expression -> NAME','expression',1,'p_expression_name','rules.py',255),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','rules.py',260),
  ('arglist -> expression','arglist',1,'p_arglist','rules.py',261),
  ('arglist_def -> arglist COMMA NAME','arglist_def',3,'p_arglist_def','rules.py',270),
  ('arglist_def -> NAME','arglist_def',1,'p_arglist_def','rules.py',271),
]
